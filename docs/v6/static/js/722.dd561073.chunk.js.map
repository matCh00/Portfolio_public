{"version":3,"file":"static/js/722.dd561073.chunk.js","mappings":"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","sources":["components/card1/Card1.tsx","../../shared/sections/services.js","sections/services/Services.tsx"],"sourcesContent":["import React, {useEffect, useRef} from \"react\";\r\nimport './card1.css';\r\n\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  maxTilt?: number;\r\n  scale?: number;\r\n  speed?: number;\r\n};\r\n\r\nconst Card1 = ({ children, maxTilt = 15, scale = 1.05, speed = 300 }: Props) => {\r\n  const ref = useRef<HTMLDivElement | null>(null);\r\n  const requestRef = useRef<number | null>(null);\r\n  const tiltData = useRef({ rotateX: 0, rotateY: 0 });\r\n\r\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    const el = ref.current;\r\n    if (!el) return;\r\n\r\n    const rect = el.getBoundingClientRect();\r\n    const x = e.clientX - rect.left - rect.width / 2;\r\n    const y = e.clientY - rect.top - rect.height / 2;\r\n\r\n    const rotateX = (-y / (rect.height / 2)) * maxTilt;\r\n    const rotateY = (x / (rect.width / 2)) * maxTilt;\r\n\r\n    tiltData.current = { rotateX, rotateY };\r\n\r\n    if (requestRef.current === null) {\r\n      requestRef.current = requestAnimationFrame(applyTilt);\r\n    }\r\n  };\r\n\r\n  const applyTilt = () => {\r\n    const el = ref.current;\r\n    if (el) {\r\n      const { rotateX, rotateY } = tiltData.current;\r\n      el.style.transform = `\r\n        perspective(1000px)\r\n        rotateX(${rotateX.toFixed(2)}deg)\r\n        rotateY(${rotateY.toFixed(2)}deg)\r\n        scale(${scale})\r\n      `;\r\n    }\r\n    requestRef.current = null;\r\n  };\r\n\r\n  const resetTilt = () => {\r\n    const el = ref.current;\r\n    if (el) {\r\n      el.style.transform = `\r\n        perspective(1000px)\r\n        rotateX(0deg)\r\n        rotateY(0deg)\r\n        scale(1)\r\n      `;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (requestRef.current) {\r\n        cancelAnimationFrame(requestRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <div\r\n      className=\"tilt-card1\"\r\n      style={{ transition: `transform ${speed}ms ease` }}\r\n      ref={ref}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseLeave={resetTilt}\r\n    >\r\n\r\n      <div className=\"tilt-card1-inner\">\r\n        {children}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card1;","export const services = [\r\n  {\r\n    key: \"Implementacja GUI\",\r\n    values: [\r\n      { key: \"Najnowsze wersje Angular\" },\r\n      { key: \"Starsze wersje Angular\" },\r\n      { key: \"Najnowsze wersje React\" },\r\n      { key: \"Najnowsze wersje Vue\" },\r\n      { key: \"Znajomość PrimeFaces\" },\r\n    ],\r\n  },\r\n  {\r\n    key: \"Dobre praktyki programowania\",\r\n    values: [\r\n      { key: \"Tworzenie czystego kodu\" },\r\n      { key: \"Dobre praktyki UI/UX\" },\r\n      { key: \"Implementacja animacji\" },\r\n      { key: \"Responsywność aplikacji\" },\r\n    ],\r\n  },\r\n  {\r\n    key: \"Zarządzanie aplikacją\",\r\n    values: [\r\n      { key: \"Dobre praktyki Git\" }, \r\n      { key: \"Znajomość Docker\" }\r\n    ],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport {services} from '@portfolio/shared/sections/services';\r\nimport './services.css';\r\nimport Card1 from \"src/components/card1/Card1\";\r\nimport { IoCheckboxOutline } from \"react-icons/io5\";\r\n\r\n\r\nconst Services = () => {\r\n  \r\n  return (\r\n    <section id=\"services\" className=\"services\">\r\n\r\n      <div className=\"section-header\">\r\n        <h5 className=\"color-primary-text-dark\">Co oferuję</h5>\r\n        <h2 className=\"color-secondary\">Usługi</h2>\r\n      </div>\r\n\r\n      <div className=\"services-cards\">\r\n\r\n        {services.map(s => {\r\n            return (\r\n              <Card1 maxTilt={25} scale={1.1} speed={300} key={Math.random()}>\r\n                <div className=\"services-card\">\r\n                  <h2 className='color-primary-text'>{s.key}</h2>\r\n\r\n                  <div className=\"services-card-elements\">\r\n                    {s.values.map(v => {\r\n                      return (\r\n                        <p key={v.key}>\r\n                          <IoCheckboxOutline className='color-primary-text'/> &nbsp;\r\n                          <span className=\"color-primary-text\">{v.key}</span>\r\n                        </p>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </Card1>\r\n            )\r\n          })}\r\n\r\n      </div>\r\n      \r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Services;"],"names":["_ref","children","maxTilt","scale","speed","ref","useRef","requestRef","tiltData","rotateX","rotateY","applyTilt","el","current","style","transform","concat","toFixed","useEffect","cancelAnimationFrame","_jsx","className","transition","onMouseMove","e","rect","getBoundingClientRect","x","clientX","left","width","clientY","top","height","requestAnimationFrame","onMouseLeave","resetTilt","services","key","values","Services","_jsxs","id","map","s","Card1","v","IoCheckboxOutline","Math","random"],"sourceRoot":""}